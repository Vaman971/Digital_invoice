{"ast":null,"code":"import _toConsumableArray from\"E:/Myweb/Digital_invoice/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"E:/Myweb/Digital_invoice/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import*as actionTypes from'../constants/cartConstants';var CART_INITIAL_STATE={cartItems:[]};export var cartReducer=function cartReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:CART_INITIAL_STATE;var action=arguments.length>1?arguments[1]:undefined;console.log(\"Current State:\",state);console.log(\"Action:\",action);switch(action.type){case actionTypes.ADD_TO_CART:var item=action.payload;// in action.payload we'll get the item we want to add\nvar existItem=state.cartItems.find(function(x){return x.product===item.product;});// the product will consist of the id and it will check if the payload id is same as the incomming items id , if its there then it'll not add the item to the cart\nif(existItem){return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.map(function(x){return x.product===existItem.product?item:x;})});}else{return _objectSpread(_objectSpread({},state),{},{cartItems:[].concat(_toConsumableArray(state.cartItems),[item])// if the cart iten does not exsist then we'll just add that item into the cart\n});}case actionTypes.ADD_TO_SERVICE_CART:var serviceItem=action.payload;var existServiceItem=state.cartItems.find(function(x){return x.service===serviceItem.service;});if(existServiceItem){return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.map(function(x){return x.service===existServiceItem.service?serviceItem:x;})});}else{return _objectSpread(_objectSpread({},state),{},{cartItems:[].concat(_toConsumableArray(state.cartItems),[serviceItem])// if the cart iten does not exsist then we'll just add that item into the cart\n});}case actionTypes.REMOVE_FROM_CART:return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.filter(function(x){return x.product!==action.payload;})// here we are pushing everything to the array except the one we want to delete.\n});default:return state;}};","map":{"version":3,"names":["actionTypes","CART_INITIAL_STATE","cartItems","cartReducer","state","arguments","length","undefined","action","console","log","type","ADD_TO_CART","item","payload","existItem","find","x","product","_objectSpread","map","concat","_toConsumableArray","ADD_TO_SERVICE_CART","serviceItem","existServiceItem","service","REMOVE_FROM_CART","filter"],"sources":["E:/Myweb/Digital_invoice/client/src/redux/reducers/cartReducer.js"],"sourcesContent":["import * as actionTypes from '../constants/cartConstants';\r\n\r\nconst CART_INITIAL_STATE = {\r\n    cartItems: [],\r\n};\r\n\r\nexport const cartReducer = (state = CART_INITIAL_STATE, action) => {\r\n    console.log(\"Current State:\", state);\r\n    console.log(\"Action:\", action);\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART:\r\n            const item = action.payload; // in action.payload we'll get the item we want to add\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product);\r\n            // the product will consist of the id and it will check if the payload id is same as the incomming items id , if its there then it'll not add the item to the cart\r\n\r\n            if (existItem) {\r\n                return {\r\n                    // spreading the state of our cart\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) =>\r\n                        x.product === existItem.product ? item : x\r\n                    ),\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item], // if the cart iten does not exsist then we'll just add that item into the cart\r\n                };\r\n            }\r\n\r\n        case actionTypes.ADD_TO_SERVICE_CART:\r\n\r\n            const serviceItem = action.payload;\r\n            const existServiceItem = state.cartItems.find((x) => x.service === serviceItem.service)\r\n\r\n            if (existServiceItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.service === existServiceItem.service ? serviceItem : x),\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, serviceItem], // if the cart iten does not exsist then we'll just add that item into the cart\r\n                };\r\n            }\r\n\r\n        case actionTypes.REMOVE_FROM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload), // here we are pushing everything to the array except the one we want to delete.\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};"],"mappings":"iPAAA,MAAO,GAAK,CAAAA,WAAW,KAAM,4BAA4B,CAEzD,GAAM,CAAAC,kBAAkB,CAAG,CACvBC,SAAS,CAAE,EACf,CAAC,CAED,MAAO,IAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAA2C,IAAvC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGJ,kBAAkB,IAAE,CAAAO,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAC1DE,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEN,KAAK,CAAC,CACpCK,OAAO,CAACC,GAAG,CAAC,SAAS,CAAEF,MAAM,CAAC,CAC9B,OAAQA,MAAM,CAACG,IAAI,EACf,IAAK,CAAAX,WAAW,CAACY,WAAW,CACxB,GAAM,CAAAC,IAAI,CAAGL,MAAM,CAACM,OAAO,CAAE;AAE7B,GAAM,CAAAC,SAAS,CAAGX,KAAK,CAACF,SAAS,CAACc,IAAI,CAAC,SAACC,CAAC,QAAK,CAAAA,CAAC,CAACC,OAAO,GAAKL,IAAI,CAACK,OAAO,GAAC,CACzE;AAEA,GAAIH,SAAS,CAAE,CACX,OAAAI,aAAA,CAAAA,aAAA,IAEOf,KAAK,MACRF,SAAS,CAAEE,KAAK,CAACF,SAAS,CAACkB,GAAG,CAAC,SAACH,CAAC,QAC7B,CAAAA,CAAC,CAACC,OAAO,GAAKH,SAAS,CAACG,OAAO,CAAGL,IAAI,CAAGI,CAAC,EAC9C,CAAC,GAET,CAAC,IACI,CACD,OAAAE,aAAA,CAAAA,aAAA,IACOf,KAAK,MACRF,SAAS,IAAAmB,MAAA,CAAAC,kBAAA,CAAMlB,KAAK,CAACF,SAAS,GAAEW,IAAI,EAAG;AAAA,GAE/C,CAEJ,IAAK,CAAAb,WAAW,CAACuB,mBAAmB,CAEhC,GAAM,CAAAC,WAAW,CAAGhB,MAAM,CAACM,OAAO,CAClC,GAAM,CAAAW,gBAAgB,CAAGrB,KAAK,CAACF,SAAS,CAACc,IAAI,CAAC,SAACC,CAAC,QAAK,CAAAA,CAAC,CAACS,OAAO,GAAKF,WAAW,CAACE,OAAO,GAAC,CAEvF,GAAID,gBAAgB,CAAE,CAClB,OAAAN,aAAA,CAAAA,aAAA,IACOf,KAAK,MACRF,SAAS,CAAEE,KAAK,CAACF,SAAS,CAACkB,GAAG,CAAC,SAACH,CAAC,QAAK,CAAAA,CAAC,CAACS,OAAO,GAAKD,gBAAgB,CAACC,OAAO,CAAGF,WAAW,CAAGP,CAAC,GAAC,GAEvG,CAAC,IACI,CACD,OAAAE,aAAA,CAAAA,aAAA,IACOf,KAAK,MACRF,SAAS,IAAAmB,MAAA,CAAAC,kBAAA,CAAMlB,KAAK,CAACF,SAAS,GAAEsB,WAAW,EAAG;AAAA,GAEtD,CAEJ,IAAK,CAAAxB,WAAW,CAAC2B,gBAAgB,CAC7B,OAAAR,aAAA,CAAAA,aAAA,IACOf,KAAK,MACRF,SAAS,CAAEE,KAAK,CAACF,SAAS,CAAC0B,MAAM,CAAC,SAACX,CAAC,QAAK,CAAAA,CAAC,CAACC,OAAO,GAAKV,MAAM,CAACM,OAAO,GAAG;AAAA,GAGhF,QACI,MAAO,CAAAV,KAAK,CACpB,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}